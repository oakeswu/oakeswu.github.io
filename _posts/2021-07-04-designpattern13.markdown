---
layout:     post
title:      "设计模式(八) -- 实践中如何运用设计模式原则"
subtitle:   ""
date:       2021-07-04
author:     "OakesWu"
header-img: "img/post-bg-2015.jpg"
tags:
    - 设计模式
---
# 什么是设计模式原则
设计模式原则就是常见的六大原则（单一职责，里氏替换，接口隔离，依赖倒置，迪米特，开闭），各个职责的具体内容网络上查询一下比比皆是，之前的博客也有相应的内容，但是很难查询到如何使用，何时使用，为啥使用，本文希望能做一个总结和分析。

# 为什么使用
我们在编程中很容易面向过程编程而不是面向对象编程，在CR时很容易被人吐槽项目不够清晰明了，后续拓展或修改代码时很容易担心影响其他地方，这些问题都是这几年工作过程中实际遇到过得问题，那么如何去解决这些问题呢，答案是编写代码时需要有一个思想或原则的指导，即设计模式原则。
设计模式原则可以使得项目结果更加清晰，服务更加容易拓展和修改，总体就是高内聚，低耦合。

# 设计模式原则和设计模式
设计模式原则我愿意称之为道，设计模式称之为术，道更偏思想上的指导，术则是具体方法的实践，设计模式原则更偏向于**代码关系**的考量，设计模式偏向于**代码层级**的考虑。设计模式原则更偏**代码整体**的思考，设计模式更偏**代码细节**的考虑。

# 如何运用
- 首先了解六大原则表达的内容
如果想要运用六大原则，首先的前提就是先要了解六大原则是啥，讲的内容是什么。
- 开闭原则是中心思想
 六大原则中开闭原则是中心思想，我们在编写程序时首先要思考下面几个问题，**1.代码是否可以放在其他地方，是否可以被复用，2.如果后面修改是不是可能会修改多个地方，3.如果你需要将拆分部分功能给其他人实现，是否可以分。**我认为回答完上面问题之后基本上满足开闭原则了，然后按照面向接口编程的方法去编写的代码不会差。
- 需求方案制定
大一点的需求一般会要求写需求方案，在需求方案中可能会用到UML建模等能力，建模过程中也会思考到单一职责，依赖倒置等原则。